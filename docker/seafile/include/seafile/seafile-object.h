/* seafile-object.h generated by valac 0.56.16, the Vala compiler, do not modify */

#ifndef __SEAFILE_OBJECT_H__
#define __SEAFILE_OBJECT_H__

#include <glib-object.h>
#include <glib.h>

G_BEGIN_DECLS

#if !defined(VALA_EXTERN)
#if defined(_MSC_VER)
#define VALA_EXTERN __declspec(dllexport) extern
#elif __GNUC__ >= 4
#define VALA_EXTERN __attribute__((visibility("default"))) extern
#else
#define VALA_EXTERN extern
#endif
#endif

#define SEAFILE_TYPE_REPO (seafile_repo_get_type ())
#define SEAFILE_REPO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_REPO, SeafileRepo))
#define SEAFILE_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_REPO, SeafileRepoClass))
#define SEAFILE_IS_REPO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_REPO))
#define SEAFILE_IS_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_REPO))
#define SEAFILE_REPO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_REPO, SeafileRepoClass))

typedef struct _SeafileRepo SeafileRepo;
typedef struct _SeafileRepoClass SeafileRepoClass;
typedef struct _SeafileRepoPrivate SeafileRepoPrivate;

#define SEAFILE_TYPE_TRASH_REPO (seafile_trash_repo_get_type ())
#define SEAFILE_TRASH_REPO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_TRASH_REPO, SeafileTrashRepo))
#define SEAFILE_TRASH_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_TRASH_REPO, SeafileTrashRepoClass))
#define SEAFILE_IS_TRASH_REPO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_TRASH_REPO))
#define SEAFILE_IS_TRASH_REPO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_TRASH_REPO))
#define SEAFILE_TRASH_REPO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_TRASH_REPO, SeafileTrashRepoClass))

typedef struct _SeafileTrashRepo SeafileTrashRepo;
typedef struct _SeafileTrashRepoClass SeafileTrashRepoClass;
typedef struct _SeafileTrashRepoPrivate SeafileTrashRepoPrivate;

#define SEAFILE_TYPE_SYNC_INFO (seafile_sync_info_get_type ())
#define SEAFILE_SYNC_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SYNC_INFO, SeafileSyncInfo))
#define SEAFILE_SYNC_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SYNC_INFO, SeafileSyncInfoClass))
#define SEAFILE_IS_SYNC_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SYNC_INFO))
#define SEAFILE_IS_SYNC_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SYNC_INFO))
#define SEAFILE_SYNC_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SYNC_INFO, SeafileSyncInfoClass))

typedef struct _SeafileSyncInfo SeafileSyncInfo;
typedef struct _SeafileSyncInfoClass SeafileSyncInfoClass;
typedef struct _SeafileSyncInfoPrivate SeafileSyncInfoPrivate;

#define SEAFILE_TYPE_SYNC_TASK (seafile_sync_task_get_type ())
#define SEAFILE_SYNC_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SYNC_TASK, SeafileSyncTask))
#define SEAFILE_SYNC_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SYNC_TASK, SeafileSyncTaskClass))
#define SEAFILE_IS_SYNC_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SYNC_TASK))
#define SEAFILE_IS_SYNC_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SYNC_TASK))
#define SEAFILE_SYNC_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SYNC_TASK, SeafileSyncTaskClass))

typedef struct _SeafileSyncTask SeafileSyncTask;
typedef struct _SeafileSyncTaskClass SeafileSyncTaskClass;
typedef struct _SeafileSyncTaskPrivate SeafileSyncTaskPrivate;

#define SEAFILE_TYPE_SESSION_INFO (seafile_session_info_get_type ())
#define SEAFILE_SESSION_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SESSION_INFO, SeafileSessionInfo))
#define SEAFILE_SESSION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SESSION_INFO, SeafileSessionInfoClass))
#define SEAFILE_IS_SESSION_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SESSION_INFO))
#define SEAFILE_IS_SESSION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SESSION_INFO))
#define SEAFILE_SESSION_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SESSION_INFO, SeafileSessionInfoClass))

typedef struct _SeafileSessionInfo SeafileSessionInfo;
typedef struct _SeafileSessionInfoClass SeafileSessionInfoClass;
typedef struct _SeafileSessionInfoPrivate SeafileSessionInfoPrivate;

#define SEAFILE_TYPE_CHECKOUT_TASK (seafile_checkout_task_get_type ())
#define SEAFILE_CHECKOUT_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_CHECKOUT_TASK, SeafileCheckoutTask))
#define SEAFILE_CHECKOUT_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_CHECKOUT_TASK, SeafileCheckoutTaskClass))
#define SEAFILE_IS_CHECKOUT_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_CHECKOUT_TASK))
#define SEAFILE_IS_CHECKOUT_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_CHECKOUT_TASK))
#define SEAFILE_CHECKOUT_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_CHECKOUT_TASK, SeafileCheckoutTaskClass))

typedef struct _SeafileCheckoutTask SeafileCheckoutTask;
typedef struct _SeafileCheckoutTaskClass SeafileCheckoutTaskClass;
typedef struct _SeafileCheckoutTaskPrivate SeafileCheckoutTaskPrivate;

#define SEAFILE_TYPE_DIFF_ENTRY (seafile_diff_entry_get_type ())
#define SEAFILE_DIFF_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DIFF_ENTRY, SeafileDiffEntry))
#define SEAFILE_DIFF_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DIFF_ENTRY, SeafileDiffEntryClass))
#define SEAFILE_IS_DIFF_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DIFF_ENTRY))
#define SEAFILE_IS_DIFF_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DIFF_ENTRY))
#define SEAFILE_DIFF_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DIFF_ENTRY, SeafileDiffEntryClass))

typedef struct _SeafileDiffEntry SeafileDiffEntry;
typedef struct _SeafileDiffEntryClass SeafileDiffEntryClass;
typedef struct _SeafileDiffEntryPrivate SeafileDiffEntryPrivate;

#define SEAFILE_TYPE_DELETED_ENTRY (seafile_deleted_entry_get_type ())
#define SEAFILE_DELETED_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DELETED_ENTRY, SeafileDeletedEntry))
#define SEAFILE_DELETED_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DELETED_ENTRY, SeafileDeletedEntryClass))
#define SEAFILE_IS_DELETED_ENTRY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DELETED_ENTRY))
#define SEAFILE_IS_DELETED_ENTRY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DELETED_ENTRY))
#define SEAFILE_DELETED_ENTRY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DELETED_ENTRY, SeafileDeletedEntryClass))

typedef struct _SeafileDeletedEntry SeafileDeletedEntry;
typedef struct _SeafileDeletedEntryClass SeafileDeletedEntryClass;
typedef struct _SeafileDeletedEntryPrivate SeafileDeletedEntryPrivate;

#define SEAFILE_TYPE_REPO_TOKEN_INFO (seafile_repo_token_info_get_type ())
#define SEAFILE_REPO_TOKEN_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_REPO_TOKEN_INFO, SeafileRepoTokenInfo))
#define SEAFILE_REPO_TOKEN_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_REPO_TOKEN_INFO, SeafileRepoTokenInfoClass))
#define SEAFILE_IS_REPO_TOKEN_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_REPO_TOKEN_INFO))
#define SEAFILE_IS_REPO_TOKEN_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_REPO_TOKEN_INFO))
#define SEAFILE_REPO_TOKEN_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_REPO_TOKEN_INFO, SeafileRepoTokenInfoClass))

typedef struct _SeafileRepoTokenInfo SeafileRepoTokenInfo;
typedef struct _SeafileRepoTokenInfoClass SeafileRepoTokenInfoClass;
typedef struct _SeafileRepoTokenInfoPrivate SeafileRepoTokenInfoPrivate;

#define SEAFILE_TYPE_SHARED_USER (seafile_shared_user_get_type ())
#define SEAFILE_SHARED_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SHARED_USER, SeafileSharedUser))
#define SEAFILE_SHARED_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SHARED_USER, SeafileSharedUserClass))
#define SEAFILE_IS_SHARED_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SHARED_USER))
#define SEAFILE_IS_SHARED_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SHARED_USER))
#define SEAFILE_SHARED_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SHARED_USER, SeafileSharedUserClass))

typedef struct _SeafileSharedUser SeafileSharedUser;
typedef struct _SeafileSharedUserClass SeafileSharedUserClass;
typedef struct _SeafileSharedUserPrivate SeafileSharedUserPrivate;

#define SEAFILE_TYPE_SHARED_GROUP (seafile_shared_group_get_type ())
#define SEAFILE_SHARED_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SHARED_GROUP, SeafileSharedGroup))
#define SEAFILE_SHARED_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SHARED_GROUP, SeafileSharedGroupClass))
#define SEAFILE_IS_SHARED_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SHARED_GROUP))
#define SEAFILE_IS_SHARED_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SHARED_GROUP))
#define SEAFILE_SHARED_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SHARED_GROUP, SeafileSharedGroupClass))

typedef struct _SeafileSharedGroup SeafileSharedGroup;
typedef struct _SeafileSharedGroupClass SeafileSharedGroupClass;
typedef struct _SeafileSharedGroupPrivate SeafileSharedGroupPrivate;

#define SEAFILE_TYPE_ENCRYPTION_INFO (seafile_encryption_info_get_type ())
#define SEAFILE_ENCRYPTION_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_ENCRYPTION_INFO, SeafileEncryptionInfo))
#define SEAFILE_ENCRYPTION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_ENCRYPTION_INFO, SeafileEncryptionInfoClass))
#define SEAFILE_IS_ENCRYPTION_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_ENCRYPTION_INFO))
#define SEAFILE_IS_ENCRYPTION_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_ENCRYPTION_INFO))
#define SEAFILE_ENCRYPTION_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_ENCRYPTION_INFO, SeafileEncryptionInfoClass))

typedef struct _SeafileEncryptionInfo SeafileEncryptionInfo;
typedef struct _SeafileEncryptionInfoClass SeafileEncryptionInfoClass;
typedef struct _SeafileEncryptionInfoPrivate SeafileEncryptionInfoPrivate;

#define SEAFILE_TYPE_USER_QUOTA_USAGE (seafile_user_quota_usage_get_type ())
#define SEAFILE_USER_QUOTA_USAGE(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_USER_QUOTA_USAGE, SeafileUserQuotaUsage))
#define SEAFILE_USER_QUOTA_USAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_USER_QUOTA_USAGE, SeafileUserQuotaUsageClass))
#define SEAFILE_IS_USER_QUOTA_USAGE(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_USER_QUOTA_USAGE))
#define SEAFILE_IS_USER_QUOTA_USAGE_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_USER_QUOTA_USAGE))
#define SEAFILE_USER_QUOTA_USAGE_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_USER_QUOTA_USAGE, SeafileUserQuotaUsageClass))

typedef struct _SeafileUserQuotaUsage SeafileUserQuotaUsage;
typedef struct _SeafileUserQuotaUsageClass SeafileUserQuotaUsageClass;
typedef struct _SeafileUserQuotaUsagePrivate SeafileUserQuotaUsagePrivate;

#define SEAFILE_TYPE_FOLDER_USER_PERM (seafile_folder_user_perm_get_type ())
#define SEAFILE_FOLDER_USER_PERM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_FOLDER_USER_PERM, SeafileFolderUserPerm))
#define SEAFILE_FOLDER_USER_PERM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_FOLDER_USER_PERM, SeafileFolderUserPermClass))
#define SEAFILE_IS_FOLDER_USER_PERM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_FOLDER_USER_PERM))
#define SEAFILE_IS_FOLDER_USER_PERM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_FOLDER_USER_PERM))
#define SEAFILE_FOLDER_USER_PERM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_FOLDER_USER_PERM, SeafileFolderUserPermClass))

typedef struct _SeafileFolderUserPerm SeafileFolderUserPerm;
typedef struct _SeafileFolderUserPermClass SeafileFolderUserPermClass;
typedef struct _SeafileFolderUserPermPrivate SeafileFolderUserPermPrivate;

#define SEAFILE_TYPE_FOLDER_GROUP_PERM (seafile_folder_group_perm_get_type ())
#define SEAFILE_FOLDER_GROUP_PERM(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_FOLDER_GROUP_PERM, SeafileFolderGroupPerm))
#define SEAFILE_FOLDER_GROUP_PERM_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_FOLDER_GROUP_PERM, SeafileFolderGroupPermClass))
#define SEAFILE_IS_FOLDER_GROUP_PERM(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_FOLDER_GROUP_PERM))
#define SEAFILE_IS_FOLDER_GROUP_PERM_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_FOLDER_GROUP_PERM))
#define SEAFILE_FOLDER_GROUP_PERM_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_FOLDER_GROUP_PERM, SeafileFolderGroupPermClass))

typedef struct _SeafileFolderGroupPerm SeafileFolderGroupPerm;
typedef struct _SeafileFolderGroupPermClass SeafileFolderGroupPermClass;
typedef struct _SeafileFolderGroupPermPrivate SeafileFolderGroupPermPrivate;

#define SEAFILE_TYPE_FILE_LOCK (seafile_file_lock_get_type ())
#define SEAFILE_FILE_LOCK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_FILE_LOCK, SeafileFileLock))
#define SEAFILE_FILE_LOCK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_FILE_LOCK, SeafileFileLockClass))
#define SEAFILE_IS_FILE_LOCK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_FILE_LOCK))
#define SEAFILE_IS_FILE_LOCK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_FILE_LOCK))
#define SEAFILE_FILE_LOCK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_FILE_LOCK, SeafileFileLockClass))

typedef struct _SeafileFileLock SeafileFileLock;
typedef struct _SeafileFileLockClass SeafileFileLockClass;
typedef struct _SeafileFileLockPrivate SeafileFileLockPrivate;

#define SEAFILE_TYPE_REPO_ID_COMMIT_ID (seafile_repo_id_commit_id_get_type ())
#define SEAFILE_REPO_ID_COMMIT_ID(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_REPO_ID_COMMIT_ID, SeafileRepoIdCommitId))
#define SEAFILE_REPO_ID_COMMIT_ID_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_REPO_ID_COMMIT_ID, SeafileRepoIdCommitIdClass))
#define SEAFILE_IS_REPO_ID_COMMIT_ID(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_REPO_ID_COMMIT_ID))
#define SEAFILE_IS_REPO_ID_COMMIT_ID_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_REPO_ID_COMMIT_ID))
#define SEAFILE_REPO_ID_COMMIT_ID_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_REPO_ID_COMMIT_ID, SeafileRepoIdCommitIdClass))

typedef struct _SeafileRepoIdCommitId SeafileRepoIdCommitId;
typedef struct _SeafileRepoIdCommitIdClass SeafileRepoIdCommitIdClass;
typedef struct _SeafileRepoIdCommitIdPrivate SeafileRepoIdCommitIdPrivate;

#define SEAFILE_TYPE_STORAGE_CLASSES (seafile_storage_classes_get_type ())
#define SEAFILE_STORAGE_CLASSES(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_STORAGE_CLASSES, SeafileStorageClasses))
#define SEAFILE_STORAGE_CLASSES_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_STORAGE_CLASSES, SeafileStorageClassesClass))
#define SEAFILE_IS_STORAGE_CLASSES(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_STORAGE_CLASSES))
#define SEAFILE_IS_STORAGE_CLASSES_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_STORAGE_CLASSES))
#define SEAFILE_STORAGE_CLASSES_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_STORAGE_CLASSES, SeafileStorageClassesClass))

typedef struct _SeafileStorageClasses SeafileStorageClasses;
typedef struct _SeafileStorageClassesClass SeafileStorageClassesClass;
typedef struct _SeafileStorageClassesPrivate SeafileStorageClassesPrivate;

#define SEAFILE_TYPE_COMMIT (seafile_commit_get_type ())
#define SEAFILE_COMMIT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_COMMIT, SeafileCommit))
#define SEAFILE_COMMIT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_COMMIT, SeafileCommitClass))
#define SEAFILE_IS_COMMIT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_COMMIT))
#define SEAFILE_IS_COMMIT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_COMMIT))
#define SEAFILE_COMMIT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_COMMIT, SeafileCommitClass))

typedef struct _SeafileCommit SeafileCommit;
typedef struct _SeafileCommitClass SeafileCommitClass;
typedef struct _SeafileCommitPrivate SeafileCommitPrivate;

#define SEAFILE_TYPE_DIRENT (seafile_dirent_get_type ())
#define SEAFILE_DIRENT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DIRENT, SeafileDirent))
#define SEAFILE_DIRENT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DIRENT, SeafileDirentClass))
#define SEAFILE_IS_DIRENT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DIRENT))
#define SEAFILE_IS_DIRENT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DIRENT))
#define SEAFILE_DIRENT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DIRENT, SeafileDirentClass))

typedef struct _SeafileDirent SeafileDirent;
typedef struct _SeafileDirentClass SeafileDirentClass;
typedef struct _SeafileDirentPrivate SeafileDirentPrivate;

#define SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO (seafile_file_last_modified_info_get_type ())
#define SEAFILE_FILE_LAST_MODIFIED_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO, SeafileFileLastModifiedInfo))
#define SEAFILE_FILE_LAST_MODIFIED_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO, SeafileFileLastModifiedInfoClass))
#define SEAFILE_IS_FILE_LAST_MODIFIED_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO))
#define SEAFILE_IS_FILE_LAST_MODIFIED_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO))
#define SEAFILE_FILE_LAST_MODIFIED_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_FILE_LAST_MODIFIED_INFO, SeafileFileLastModifiedInfoClass))

typedef struct _SeafileFileLastModifiedInfo SeafileFileLastModifiedInfo;
typedef struct _SeafileFileLastModifiedInfoClass SeafileFileLastModifiedInfoClass;
typedef struct _SeafileFileLastModifiedInfoPrivate SeafileFileLastModifiedInfoPrivate;

#define SEAFILE_TYPE_DIR (seafile_dir_get_type ())
#define SEAFILE_DIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_DIR, SeafileDir))
#define SEAFILE_DIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_DIR, SeafileDirClass))
#define SEAFILE_IS_DIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_DIR))
#define SEAFILE_IS_DIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_DIR))
#define SEAFILE_DIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_DIR, SeafileDirClass))

typedef struct _SeafileDir SeafileDir;
typedef struct _SeafileDirClass SeafileDirClass;
typedef struct _SeafileDirPrivate SeafileDirPrivate;

#define SEAFILE_TYPE_FILE_COUNT_INFO (seafile_file_count_info_get_type ())
#define SEAFILE_FILE_COUNT_INFO(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_FILE_COUNT_INFO, SeafileFileCountInfo))
#define SEAFILE_FILE_COUNT_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_FILE_COUNT_INFO, SeafileFileCountInfoClass))
#define SEAFILE_IS_FILE_COUNT_INFO(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_FILE_COUNT_INFO))
#define SEAFILE_IS_FILE_COUNT_INFO_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_FILE_COUNT_INFO))
#define SEAFILE_FILE_COUNT_INFO_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_FILE_COUNT_INFO, SeafileFileCountInfoClass))

typedef struct _SeafileFileCountInfo SeafileFileCountInfo;
typedef struct _SeafileFileCountInfoClass SeafileFileCountInfoClass;
typedef struct _SeafileFileCountInfoPrivate SeafileFileCountInfoPrivate;

#define SEAFILE_TYPE_TASK (seafile_task_get_type ())
#define SEAFILE_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_TASK, SeafileTask))
#define SEAFILE_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_TASK, SeafileTaskClass))
#define SEAFILE_IS_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_TASK))
#define SEAFILE_IS_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_TASK))
#define SEAFILE_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_TASK, SeafileTaskClass))

typedef struct _SeafileTask SeafileTask;
typedef struct _SeafileTaskClass SeafileTaskClass;
typedef struct _SeafileTaskPrivate SeafileTaskPrivate;

#define SEAFILE_TYPE_CLONE_TASK (seafile_clone_task_get_type ())
#define SEAFILE_CLONE_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_CLONE_TASK, SeafileCloneTask))
#define SEAFILE_CLONE_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_CLONE_TASK, SeafileCloneTaskClass))
#define SEAFILE_IS_CLONE_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_CLONE_TASK))
#define SEAFILE_IS_CLONE_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_CLONE_TASK))
#define SEAFILE_CLONE_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_CLONE_TASK, SeafileCloneTaskClass))

typedef struct _SeafileCloneTask SeafileCloneTask;
typedef struct _SeafileCloneTaskClass SeafileCloneTaskClass;
typedef struct _SeafileCloneTaskPrivate SeafileCloneTaskPrivate;

#define SEAFILE_TYPE_BRANCH (seafile_branch_get_type ())
#define SEAFILE_BRANCH(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_BRANCH, SeafileBranch))
#define SEAFILE_BRANCH_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_BRANCH, SeafileBranchClass))
#define SEAFILE_IS_BRANCH(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_BRANCH))
#define SEAFILE_IS_BRANCH_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_BRANCH))
#define SEAFILE_BRANCH_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_BRANCH, SeafileBranchClass))

typedef struct _SeafileBranch SeafileBranch;
typedef struct _SeafileBranchClass SeafileBranchClass;
typedef struct _SeafileBranchPrivate SeafileBranchPrivate;

#define SEAFILE_TYPE_CRYPT_KEY (seafile_crypt_key_get_type ())
#define SEAFILE_CRYPT_KEY(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_CRYPT_KEY, SeafileCryptKey))
#define SEAFILE_CRYPT_KEY_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_CRYPT_KEY, SeafileCryptKeyClass))
#define SEAFILE_IS_CRYPT_KEY(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_CRYPT_KEY))
#define SEAFILE_IS_CRYPT_KEY_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_CRYPT_KEY))
#define SEAFILE_CRYPT_KEY_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_CRYPT_KEY, SeafileCryptKeyClass))

typedef struct _SeafileCryptKey SeafileCryptKey;
typedef struct _SeafileCryptKeyClass SeafileCryptKeyClass;
typedef struct _SeafileCryptKeyPrivate SeafileCryptKeyPrivate;

#define SEAFILE_TYPE_WEB_ACCESS (seafile_web_access_get_type ())
#define SEAFILE_WEB_ACCESS(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_WEB_ACCESS, SeafileWebAccess))
#define SEAFILE_WEB_ACCESS_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_WEB_ACCESS, SeafileWebAccessClass))
#define SEAFILE_IS_WEB_ACCESS(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_WEB_ACCESS))
#define SEAFILE_IS_WEB_ACCESS_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_WEB_ACCESS))
#define SEAFILE_WEB_ACCESS_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_WEB_ACCESS, SeafileWebAccessClass))

typedef struct _SeafileWebAccess SeafileWebAccess;
typedef struct _SeafileWebAccessClass SeafileWebAccessClass;
typedef struct _SeafileWebAccessPrivate SeafileWebAccessPrivate;

#define SEAFILE_TYPE_COPY_TASK (seafile_copy_task_get_type ())
#define SEAFILE_COPY_TASK(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_COPY_TASK, SeafileCopyTask))
#define SEAFILE_COPY_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_COPY_TASK, SeafileCopyTaskClass))
#define SEAFILE_IS_COPY_TASK(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_COPY_TASK))
#define SEAFILE_IS_COPY_TASK_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_COPY_TASK))
#define SEAFILE_COPY_TASK_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_COPY_TASK, SeafileCopyTaskClass))

typedef struct _SeafileCopyTask SeafileCopyTask;
typedef struct _SeafileCopyTaskClass SeafileCopyTaskClass;
typedef struct _SeafileCopyTaskPrivate SeafileCopyTaskPrivate;

#define SEAFILE_TYPE_COPY_RESULT (seafile_copy_result_get_type ())
#define SEAFILE_COPY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_COPY_RESULT, SeafileCopyResult))
#define SEAFILE_COPY_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_COPY_RESULT, SeafileCopyResultClass))
#define SEAFILE_IS_COPY_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_COPY_RESULT))
#define SEAFILE_IS_COPY_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_COPY_RESULT))
#define SEAFILE_COPY_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_COPY_RESULT, SeafileCopyResultClass))

typedef struct _SeafileCopyResult SeafileCopyResult;
typedef struct _SeafileCopyResultClass SeafileCopyResultClass;
typedef struct _SeafileCopyResultPrivate SeafileCopyResultPrivate;

#define CCNET_TYPE_EMAIL_USER (ccnet_email_user_get_type ())
#define CCNET_EMAIL_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), CCNET_TYPE_EMAIL_USER, CcnetEmailUser))
#define CCNET_EMAIL_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), CCNET_TYPE_EMAIL_USER, CcnetEmailUserClass))
#define CCNET_IS_EMAIL_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CCNET_TYPE_EMAIL_USER))
#define CCNET_IS_EMAIL_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), CCNET_TYPE_EMAIL_USER))
#define CCNET_EMAIL_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), CCNET_TYPE_EMAIL_USER, CcnetEmailUserClass))

typedef struct _CcnetEmailUser CcnetEmailUser;
typedef struct _CcnetEmailUserClass CcnetEmailUserClass;
typedef struct _CcnetEmailUserPrivate CcnetEmailUserPrivate;

#define CCNET_TYPE_LDAP_USER (ccnet_ldap_user_get_type ())
#define CCNET_LDAP_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), CCNET_TYPE_LDAP_USER, CcnetLDAPUser))
#define CCNET_LDAP_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), CCNET_TYPE_LDAP_USER, CcnetLDAPUserClass))
#define CCNET_IS_LDAP_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CCNET_TYPE_LDAP_USER))
#define CCNET_IS_LDAP_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), CCNET_TYPE_LDAP_USER))
#define CCNET_LDAP_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), CCNET_TYPE_LDAP_USER, CcnetLDAPUserClass))

typedef struct _CcnetLDAPUser CcnetLDAPUser;
typedef struct _CcnetLDAPUserClass CcnetLDAPUserClass;
typedef struct _CcnetLDAPUserPrivate CcnetLDAPUserPrivate;

#define CCNET_TYPE_GROUP (ccnet_group_get_type ())
#define CCNET_GROUP(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), CCNET_TYPE_GROUP, CcnetGroup))
#define CCNET_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), CCNET_TYPE_GROUP, CcnetGroupClass))
#define CCNET_IS_GROUP(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CCNET_TYPE_GROUP))
#define CCNET_IS_GROUP_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), CCNET_TYPE_GROUP))
#define CCNET_GROUP_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), CCNET_TYPE_GROUP, CcnetGroupClass))

typedef struct _CcnetGroup CcnetGroup;
typedef struct _CcnetGroupClass CcnetGroupClass;
typedef struct _CcnetGroupPrivate CcnetGroupPrivate;

#define CCNET_TYPE_GROUP_USER (ccnet_group_user_get_type ())
#define CCNET_GROUP_USER(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), CCNET_TYPE_GROUP_USER, CcnetGroupUser))
#define CCNET_GROUP_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), CCNET_TYPE_GROUP_USER, CcnetGroupUserClass))
#define CCNET_IS_GROUP_USER(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CCNET_TYPE_GROUP_USER))
#define CCNET_IS_GROUP_USER_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), CCNET_TYPE_GROUP_USER))
#define CCNET_GROUP_USER_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), CCNET_TYPE_GROUP_USER, CcnetGroupUserClass))

typedef struct _CcnetGroupUser CcnetGroupUser;
typedef struct _CcnetGroupUserClass CcnetGroupUserClass;
typedef struct _CcnetGroupUserPrivate CcnetGroupUserPrivate;

#define CCNET_TYPE_GROUP_DN_PAIR (ccnet_group_dn_pair_get_type ())
#define CCNET_GROUP_DN_PAIR(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), CCNET_TYPE_GROUP_DN_PAIR, CcnetGroupDNPair))
#define CCNET_GROUP_DN_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), CCNET_TYPE_GROUP_DN_PAIR, CcnetGroupDNPairClass))
#define CCNET_IS_GROUP_DN_PAIR(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CCNET_TYPE_GROUP_DN_PAIR))
#define CCNET_IS_GROUP_DN_PAIR_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), CCNET_TYPE_GROUP_DN_PAIR))
#define CCNET_GROUP_DN_PAIR_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), CCNET_TYPE_GROUP_DN_PAIR, CcnetGroupDNPairClass))

typedef struct _CcnetGroupDNPair CcnetGroupDNPair;
typedef struct _CcnetGroupDNPairClass CcnetGroupDNPairClass;
typedef struct _CcnetGroupDNPairPrivate CcnetGroupDNPairPrivate;

#define CCNET_TYPE_ORGANIZATION (ccnet_organization_get_type ())
#define CCNET_ORGANIZATION(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), CCNET_TYPE_ORGANIZATION, CcnetOrganization))
#define CCNET_ORGANIZATION_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), CCNET_TYPE_ORGANIZATION, CcnetOrganizationClass))
#define CCNET_IS_ORGANIZATION(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), CCNET_TYPE_ORGANIZATION))
#define CCNET_IS_ORGANIZATION_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), CCNET_TYPE_ORGANIZATION))
#define CCNET_ORGANIZATION_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), CCNET_TYPE_ORGANIZATION, CcnetOrganizationClass))

typedef struct _CcnetOrganization CcnetOrganization;
typedef struct _CcnetOrganizationClass CcnetOrganizationClass;
typedef struct _CcnetOrganizationPrivate CcnetOrganizationPrivate;

#define SEAFILE_TYPE_SEARCH_RESULT (seafile_search_result_get_type ())
#define SEAFILE_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_CAST ((obj), SEAFILE_TYPE_SEARCH_RESULT, SeafileSearchResult))
#define SEAFILE_SEARCH_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_CAST ((klass), SEAFILE_TYPE_SEARCH_RESULT, SeafileSearchResultClass))
#define SEAFILE_IS_SEARCH_RESULT(obj) (G_TYPE_CHECK_INSTANCE_TYPE ((obj), SEAFILE_TYPE_SEARCH_RESULT))
#define SEAFILE_IS_SEARCH_RESULT_CLASS(klass) (G_TYPE_CHECK_CLASS_TYPE ((klass), SEAFILE_TYPE_SEARCH_RESULT))
#define SEAFILE_SEARCH_RESULT_GET_CLASS(obj) (G_TYPE_INSTANCE_GET_CLASS ((obj), SEAFILE_TYPE_SEARCH_RESULT, SeafileSearchResultClass))

typedef struct _SeafileSearchResult SeafileSearchResult;
typedef struct _SeafileSearchResultClass SeafileSearchResultClass;
typedef struct _SeafileSearchResultPrivate SeafileSearchResultPrivate;

struct _SeafileRepo {
	GObject parent_instance;
	SeafileRepoPrivate * priv;
	gchar _id[37];
	gchar* _name;
	gchar* _desc;
	gchar* _worktree;
	gchar* _relay_id;
};

struct _SeafileRepoClass {
	GObjectClass parent_class;
};

struct _SeafileTrashRepo {
	GObject parent_instance;
	SeafileTrashRepoPrivate * priv;
};

struct _SeafileTrashRepoClass {
	GObjectClass parent_class;
};

struct _SeafileSyncInfo {
	GObject parent_instance;
	SeafileSyncInfoPrivate * priv;
};

struct _SeafileSyncInfoClass {
	GObjectClass parent_class;
};

struct _SeafileSyncTask {
	GObject parent_instance;
	SeafileSyncTaskPrivate * priv;
};

struct _SeafileSyncTaskClass {
	GObjectClass parent_class;
};

struct _SeafileSessionInfo {
	GObject parent_instance;
	SeafileSessionInfoPrivate * priv;
};

struct _SeafileSessionInfoClass {
	GObjectClass parent_class;
};

struct _SeafileCheckoutTask {
	GObject parent_instance;
	SeafileCheckoutTaskPrivate * priv;
};

struct _SeafileCheckoutTaskClass {
	GObjectClass parent_class;
};

struct _SeafileDiffEntry {
	GObject parent_instance;
	SeafileDiffEntryPrivate * priv;
};

struct _SeafileDiffEntryClass {
	GObjectClass parent_class;
};

struct _SeafileDeletedEntry {
	GObject parent_instance;
	SeafileDeletedEntryPrivate * priv;
};

struct _SeafileDeletedEntryClass {
	GObjectClass parent_class;
};

struct _SeafileRepoTokenInfo {
	GObject parent_instance;
	SeafileRepoTokenInfoPrivate * priv;
};

struct _SeafileRepoTokenInfoClass {
	GObjectClass parent_class;
};

struct _SeafileSharedUser {
	GObject parent_instance;
	SeafileSharedUserPrivate * priv;
};

struct _SeafileSharedUserClass {
	GObjectClass parent_class;
};

struct _SeafileSharedGroup {
	GObject parent_instance;
	SeafileSharedGroupPrivate * priv;
};

struct _SeafileSharedGroupClass {
	GObjectClass parent_class;
};

struct _SeafileEncryptionInfo {
	GObject parent_instance;
	SeafileEncryptionInfoPrivate * priv;
};

struct _SeafileEncryptionInfoClass {
	GObjectClass parent_class;
};

struct _SeafileUserQuotaUsage {
	GObject parent_instance;
	SeafileUserQuotaUsagePrivate * priv;
};

struct _SeafileUserQuotaUsageClass {
	GObjectClass parent_class;
};

struct _SeafileFolderUserPerm {
	GObject parent_instance;
	SeafileFolderUserPermPrivate * priv;
};

struct _SeafileFolderUserPermClass {
	GObjectClass parent_class;
};

struct _SeafileFolderGroupPerm {
	GObject parent_instance;
	SeafileFolderGroupPermPrivate * priv;
};

struct _SeafileFolderGroupPermClass {
	GObjectClass parent_class;
};

struct _SeafileFileLock {
	GObject parent_instance;
	SeafileFileLockPrivate * priv;
};

struct _SeafileFileLockClass {
	GObjectClass parent_class;
};

struct _SeafileRepoIdCommitId {
	GObject parent_instance;
	SeafileRepoIdCommitIdPrivate * priv;
};

struct _SeafileRepoIdCommitIdClass {
	GObjectClass parent_class;
};

struct _SeafileStorageClasses {
	GObject parent_instance;
	SeafileStorageClassesPrivate * priv;
};

struct _SeafileStorageClassesClass {
	GObjectClass parent_class;
};

struct _SeafileCommit {
	GObject parent_instance;
	SeafileCommitPrivate * priv;
	gchar _id[41];
	gchar* _creator;
	gchar* _desc;
	gint64 _ctime;
	gchar* _repo_id;
	gchar* _root_id;
};

struct _SeafileCommitClass {
	GObjectClass parent_class;
};

struct _SeafileDirent {
	GObject parent_instance;
	SeafileDirentPrivate * priv;
};

struct _SeafileDirentClass {
	GObjectClass parent_class;
};

struct _SeafileFileLastModifiedInfo {
	GObject parent_instance;
	SeafileFileLastModifiedInfoPrivate * priv;
};

struct _SeafileFileLastModifiedInfoClass {
	GObjectClass parent_class;
};

struct _SeafileDir {
	GObject parent_instance;
	SeafileDirPrivate * priv;
	gchar _id[41];
	GList* entries;
};

struct _SeafileDirClass {
	GObjectClass parent_class;
};

struct _SeafileFileCountInfo {
	GObject parent_instance;
	SeafileFileCountInfoPrivate * priv;
};

struct _SeafileFileCountInfoClass {
	GObjectClass parent_class;
};

struct _SeafileTask {
	GObject parent_instance;
	SeafileTaskPrivate * priv;
	gchar _tx_id[37];
	gint64 _rsize;
	gint64 _dsize;
};

struct _SeafileTaskClass {
	GObjectClass parent_class;
};

struct _SeafileCloneTask {
	GObject parent_instance;
	SeafileCloneTaskPrivate * priv;
};

struct _SeafileCloneTaskClass {
	GObjectClass parent_class;
};

struct _SeafileBranch {
	GObject parent_instance;
	SeafileBranchPrivate * priv;
	gchar* _name;
	gchar* _commit_id;
	gchar* _repo_id;
};

struct _SeafileBranchClass {
	GObjectClass parent_class;
};

struct _SeafileCryptKey {
	GObject parent_instance;
	SeafileCryptKeyPrivate * priv;
};

struct _SeafileCryptKeyClass {
	GObjectClass parent_class;
};

struct _SeafileWebAccess {
	GObject parent_instance;
	SeafileWebAccessPrivate * priv;
};

struct _SeafileWebAccessClass {
	GObjectClass parent_class;
};

struct _SeafileCopyTask {
	GObject parent_instance;
	SeafileCopyTaskPrivate * priv;
};

struct _SeafileCopyTaskClass {
	GObjectClass parent_class;
};

struct _SeafileCopyResult {
	GObject parent_instance;
	SeafileCopyResultPrivate * priv;
};

struct _SeafileCopyResultClass {
	GObjectClass parent_class;
};

struct _CcnetEmailUser {
	GObject parent_instance;
	CcnetEmailUserPrivate * priv;
};

struct _CcnetEmailUserClass {
	GObjectClass parent_class;
};

struct _CcnetLDAPUser {
	GObject parent_instance;
	CcnetLDAPUserPrivate * priv;
};

struct _CcnetLDAPUserClass {
	GObjectClass parent_class;
};

struct _CcnetGroup {
	GObject parent_instance;
	CcnetGroupPrivate * priv;
};

struct _CcnetGroupClass {
	GObjectClass parent_class;
};

struct _CcnetGroupUser {
	GObject parent_instance;
	CcnetGroupUserPrivate * priv;
};

struct _CcnetGroupUserClass {
	GObjectClass parent_class;
};

struct _CcnetGroupDNPair {
	GObject parent_instance;
	CcnetGroupDNPairPrivate * priv;
};

struct _CcnetGroupDNPairClass {
	GObjectClass parent_class;
};

struct _CcnetOrganization {
	GObject parent_instance;
	CcnetOrganizationPrivate * priv;
};

struct _CcnetOrganizationClass {
	GObjectClass parent_class;
};

struct _SeafileSearchResult {
	GObject parent_instance;
	SeafileSearchResultPrivate * priv;
	gchar* _path;
};

struct _SeafileSearchResultClass {
	GObjectClass parent_class;
};

VALA_EXTERN GType seafile_repo_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileRepo, g_object_unref)
VALA_EXTERN SeafileRepo* seafile_repo_new (void);
VALA_EXTERN SeafileRepo* seafile_repo_construct (GType object_type);
VALA_EXTERN const gchar* seafile_repo_get_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_id (SeafileRepo* self,
                          const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_name (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_name (SeafileRepo* self,
                            const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_desc (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_desc (SeafileRepo* self,
                            const gchar* value);
VALA_EXTERN gint seafile_repo_get_version (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_version (SeafileRepo* self,
                               gint value);
VALA_EXTERN gint64 seafile_repo_get_last_modify (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_last_modify (SeafileRepo* self,
                                   gint64 value);
VALA_EXTERN gint64 seafile_repo_get_size (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_size (SeafileRepo* self,
                            gint64 value);
VALA_EXTERN gint64 seafile_repo_get_file_count (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_file_count (SeafileRepo* self,
                                  gint64 value);
VALA_EXTERN const gchar* seafile_repo_get_last_modifier (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_last_modifier (SeafileRepo* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_head_cmmt_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_head_cmmt_id (SeafileRepo* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_root (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_root (SeafileRepo* self,
                            const gchar* value);
VALA_EXTERN gint seafile_repo_get_status (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_status (SeafileRepo* self,
                              gint value);
VALA_EXTERN const gchar* seafile_repo_get_repo_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_repo_id (SeafileRepo* self,
                               const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_repo_name (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_repo_name (SeafileRepo* self,
                                 const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_repo_desc (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_repo_desc (SeafileRepo* self,
                                 const gchar* value);
VALA_EXTERN gint64 seafile_repo_get_last_modified (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_last_modified (SeafileRepo* self,
                                     gint64 value);
VALA_EXTERN gboolean seafile_repo_get_encrypted (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_encrypted (SeafileRepo* self,
                                 gboolean value);
VALA_EXTERN const gchar* seafile_repo_get_magic (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_magic (SeafileRepo* self,
                             const gchar* value);
VALA_EXTERN gint seafile_repo_get_enc_version (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_enc_version (SeafileRepo* self,
                                   gint value);
VALA_EXTERN const gchar* seafile_repo_get_random_key (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_random_key (SeafileRepo* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_salt (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_salt (SeafileRepo* self,
                            const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_worktree (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_worktree (SeafileRepo* self,
                                const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_relay_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_relay_id (SeafileRepo* self,
                                const gchar* value);
VALA_EXTERN gint seafile_repo_get_last_sync_time (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_last_sync_time (SeafileRepo* self,
                                      gint value);
VALA_EXTERN gboolean seafile_repo_get_auto_sync (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_auto_sync (SeafileRepo* self,
                                 gboolean value);
VALA_EXTERN gboolean seafile_repo_get_worktree_invalid (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_worktree_invalid (SeafileRepo* self,
                                        gboolean value);
VALA_EXTERN gboolean seafile_repo_get_is_virtual (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_is_virtual (SeafileRepo* self,
                                  gboolean value);
VALA_EXTERN const gchar* seafile_repo_get_origin_repo_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_origin_repo_id (SeafileRepo* self,
                                      const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_origin_repo_name (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_origin_repo_name (SeafileRepo* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_origin_path (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_origin_path (SeafileRepo* self,
                                   const gchar* value);
VALA_EXTERN gboolean seafile_repo_get_is_original_owner (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_is_original_owner (SeafileRepo* self,
                                         gboolean value);
VALA_EXTERN const gchar* seafile_repo_get_virtual_perm (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_virtual_perm (SeafileRepo* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_store_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_store_id (SeafileRepo* self,
                                const gchar* value);
VALA_EXTERN gboolean seafile_repo_get_is_corrupted (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_is_corrupted (SeafileRepo* self,
                                    gboolean value);
VALA_EXTERN gboolean seafile_repo_get_repaired (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_repaired (SeafileRepo* self,
                                gboolean value);
VALA_EXTERN const gchar* seafile_repo_get_share_type (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_share_type (SeafileRepo* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_permission (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_permission (SeafileRepo* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_user (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_user (SeafileRepo* self,
                            const gchar* value);
VALA_EXTERN gint seafile_repo_get_group_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_group_id (SeafileRepo* self,
                                gint value);
VALA_EXTERN const gchar* seafile_repo_get_group_name (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_group_name (SeafileRepo* self,
                                  const gchar* value);
VALA_EXTERN gboolean seafile_repo_get_is_shared (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_is_shared (SeafileRepo* self,
                                 gboolean value);
VALA_EXTERN const gchar* seafile_repo_get_storage_id (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_storage_id (SeafileRepo* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_repo_get_storage_name (SeafileRepo* self);
VALA_EXTERN void seafile_repo_set_storage_name (SeafileRepo* self,
                                    const gchar* value);
VALA_EXTERN GType seafile_trash_repo_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileTrashRepo, g_object_unref)
VALA_EXTERN SeafileTrashRepo* seafile_trash_repo_new (void);
VALA_EXTERN SeafileTrashRepo* seafile_trash_repo_construct (GType object_type);
VALA_EXTERN const gchar* seafile_trash_repo_get_repo_id (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_repo_id (SeafileTrashRepo* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_trash_repo_get_repo_name (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_repo_name (SeafileTrashRepo* self,
                                       const gchar* value);
VALA_EXTERN const gchar* seafile_trash_repo_get_head_id (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_head_id (SeafileTrashRepo* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_trash_repo_get_owner_id (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_owner_id (SeafileTrashRepo* self,
                                      const gchar* value);
VALA_EXTERN gint64 seafile_trash_repo_get_size (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_size (SeafileTrashRepo* self,
                                  gint64 value);
VALA_EXTERN gint seafile_trash_repo_get_org_id (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_org_id (SeafileTrashRepo* self,
                                    gint value);
VALA_EXTERN gint64 seafile_trash_repo_get_del_time (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_del_time (SeafileTrashRepo* self,
                                      gint64 value);
VALA_EXTERN gboolean seafile_trash_repo_get_encrypted (SeafileTrashRepo* self);
VALA_EXTERN void seafile_trash_repo_set_encrypted (SeafileTrashRepo* self,
                                       gboolean value);
VALA_EXTERN GType seafile_sync_info_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileSyncInfo, g_object_unref)
VALA_EXTERN SeafileSyncInfo* seafile_sync_info_new (void);
VALA_EXTERN SeafileSyncInfo* seafile_sync_info_construct (GType object_type);
VALA_EXTERN const gchar* seafile_sync_info_get_repo_id (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_repo_id (SeafileSyncInfo* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_sync_info_get_head_commit (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_head_commit (SeafileSyncInfo* self,
                                        const gchar* value);
VALA_EXTERN gboolean seafile_sync_info_get_deleted_on_relay (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_deleted_on_relay (SeafileSyncInfo* self,
                                             gboolean value);
VALA_EXTERN gboolean seafile_sync_info_get_bad_local_branch (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_bad_local_branch (SeafileSyncInfo* self,
                                             gboolean value);
VALA_EXTERN gboolean seafile_sync_info_get_need_fetch (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_need_fetch (SeafileSyncInfo* self,
                                       gboolean value);
VALA_EXTERN gboolean seafile_sync_info_get_need_upload (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_need_upload (SeafileSyncInfo* self,
                                        gboolean value);
VALA_EXTERN gboolean seafile_sync_info_get_need_merge (SeafileSyncInfo* self);
VALA_EXTERN void seafile_sync_info_set_need_merge (SeafileSyncInfo* self,
                                       gboolean value);
VALA_EXTERN GType seafile_sync_task_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileSyncTask, g_object_unref)
VALA_EXTERN SeafileSyncTask* seafile_sync_task_new (void);
VALA_EXTERN SeafileSyncTask* seafile_sync_task_construct (GType object_type);
VALA_EXTERN gboolean seafile_sync_task_get_is_sync_lan (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_is_sync_lan (SeafileSyncTask* self,
                                        gboolean value);
VALA_EXTERN gboolean seafile_sync_task_get_force_upload (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_force_upload (SeafileSyncTask* self,
                                         gboolean value);
VALA_EXTERN const gchar* seafile_sync_task_get_dest_id (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_dest_id (SeafileSyncTask* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_sync_task_get_repo_id (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_repo_id (SeafileSyncTask* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_sync_task_get_state (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_state (SeafileSyncTask* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_sync_task_get_error (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_error (SeafileSyncTask* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_sync_task_get_tx_id (SeafileSyncTask* self);
VALA_EXTERN void seafile_sync_task_set_tx_id (SeafileSyncTask* self,
                                  const gchar* value);
VALA_EXTERN GType seafile_session_info_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileSessionInfo, g_object_unref)
VALA_EXTERN SeafileSessionInfo* seafile_session_info_new (void);
VALA_EXTERN SeafileSessionInfo* seafile_session_info_construct (GType object_type);
VALA_EXTERN const gchar* seafile_session_info_get_datadir (SeafileSessionInfo* self);
VALA_EXTERN void seafile_session_info_set_datadir (SeafileSessionInfo* self,
                                       const gchar* value);
VALA_EXTERN GType seafile_checkout_task_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileCheckoutTask, g_object_unref)
VALA_EXTERN SeafileCheckoutTask* seafile_checkout_task_new (void);
VALA_EXTERN SeafileCheckoutTask* seafile_checkout_task_construct (GType object_type);
VALA_EXTERN const gchar* seafile_checkout_task_get_repo_id (SeafileCheckoutTask* self);
VALA_EXTERN void seafile_checkout_task_set_repo_id (SeafileCheckoutTask* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_checkout_task_get_worktree (SeafileCheckoutTask* self);
VALA_EXTERN void seafile_checkout_task_set_worktree (SeafileCheckoutTask* self,
                                         const gchar* value);
VALA_EXTERN gint seafile_checkout_task_get_total_files (SeafileCheckoutTask* self);
VALA_EXTERN void seafile_checkout_task_set_total_files (SeafileCheckoutTask* self,
                                            gint value);
VALA_EXTERN gint seafile_checkout_task_get_finished_files (SeafileCheckoutTask* self);
VALA_EXTERN void seafile_checkout_task_set_finished_files (SeafileCheckoutTask* self,
                                               gint value);
VALA_EXTERN GType seafile_diff_entry_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileDiffEntry, g_object_unref)
VALA_EXTERN SeafileDiffEntry* seafile_diff_entry_new (void);
VALA_EXTERN SeafileDiffEntry* seafile_diff_entry_construct (GType object_type);
VALA_EXTERN const gchar* seafile_diff_entry_get_status (SeafileDiffEntry* self);
VALA_EXTERN void seafile_diff_entry_set_status (SeafileDiffEntry* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_diff_entry_get_name (SeafileDiffEntry* self);
VALA_EXTERN void seafile_diff_entry_set_name (SeafileDiffEntry* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_diff_entry_get_new_name (SeafileDiffEntry* self);
VALA_EXTERN void seafile_diff_entry_set_new_name (SeafileDiffEntry* self,
                                      const gchar* value);
VALA_EXTERN GType seafile_deleted_entry_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileDeletedEntry, g_object_unref)
VALA_EXTERN SeafileDeletedEntry* seafile_deleted_entry_new (void);
VALA_EXTERN SeafileDeletedEntry* seafile_deleted_entry_construct (GType object_type);
VALA_EXTERN const gchar* seafile_deleted_entry_get_commit_id (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_commit_id (SeafileDeletedEntry* self,
                                          const gchar* value);
VALA_EXTERN const gchar* seafile_deleted_entry_get_obj_id (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_obj_id (SeafileDeletedEntry* self,
                                       const gchar* value);
VALA_EXTERN const gchar* seafile_deleted_entry_get_obj_name (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_obj_name (SeafileDeletedEntry* self,
                                         const gchar* value);
VALA_EXTERN const gchar* seafile_deleted_entry_get_basedir (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_basedir (SeafileDeletedEntry* self,
                                        const gchar* value);
VALA_EXTERN gint seafile_deleted_entry_get_mode (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_mode (SeafileDeletedEntry* self,
                                     gint value);
VALA_EXTERN gint seafile_deleted_entry_get_delete_time (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_delete_time (SeafileDeletedEntry* self,
                                            gint value);
VALA_EXTERN gint64 seafile_deleted_entry_get_file_size (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_file_size (SeafileDeletedEntry* self,
                                          gint64 value);
VALA_EXTERN const gchar* seafile_deleted_entry_get_scan_stat (SeafileDeletedEntry* self);
VALA_EXTERN void seafile_deleted_entry_set_scan_stat (SeafileDeletedEntry* self,
                                          const gchar* value);
VALA_EXTERN GType seafile_repo_token_info_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileRepoTokenInfo, g_object_unref)
VALA_EXTERN SeafileRepoTokenInfo* seafile_repo_token_info_new (void);
VALA_EXTERN SeafileRepoTokenInfo* seafile_repo_token_info_construct (GType object_type);
VALA_EXTERN const gchar* seafile_repo_token_info_get_repo_id (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_repo_id (SeafileRepoTokenInfo* self,
                                          const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_repo_name (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_repo_name (SeafileRepoTokenInfo* self,
                                            const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_repo_owner (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_repo_owner (SeafileRepoTokenInfo* self,
                                             const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_email (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_email (SeafileRepoTokenInfo* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_token (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_token (SeafileRepoTokenInfo* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_peer_id (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_peer_id (SeafileRepoTokenInfo* self,
                                          const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_peer_ip (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_peer_ip (SeafileRepoTokenInfo* self,
                                          const gchar* value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_peer_name (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_peer_name (SeafileRepoTokenInfo* self,
                                            const gchar* value);
VALA_EXTERN gint64 seafile_repo_token_info_get_sync_time (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_sync_time (SeafileRepoTokenInfo* self,
                                            gint64 value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_client_ver (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_client_ver (SeafileRepoTokenInfo* self,
                                             const gchar* value);
VALA_EXTERN gint64 seafile_repo_token_info_get_error_time (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_error_time (SeafileRepoTokenInfo* self,
                                             gint64 value);
VALA_EXTERN const gchar* seafile_repo_token_info_get_error_con (SeafileRepoTokenInfo* self);
VALA_EXTERN void seafile_repo_token_info_set_error_con (SeafileRepoTokenInfo* self,
                                            const gchar* value);
VALA_EXTERN GType seafile_shared_user_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileSharedUser, g_object_unref)
VALA_EXTERN SeafileSharedUser* seafile_shared_user_new (void);
VALA_EXTERN SeafileSharedUser* seafile_shared_user_construct (GType object_type);
VALA_EXTERN const gchar* seafile_shared_user_get_repo_id (SeafileSharedUser* self);
VALA_EXTERN void seafile_shared_user_set_repo_id (SeafileSharedUser* self,
                                      const gchar* value);
VALA_EXTERN const gchar* seafile_shared_user_get_user (SeafileSharedUser* self);
VALA_EXTERN void seafile_shared_user_set_user (SeafileSharedUser* self,
                                   const gchar* value);
VALA_EXTERN const gchar* seafile_shared_user_get_perm (SeafileSharedUser* self);
VALA_EXTERN void seafile_shared_user_set_perm (SeafileSharedUser* self,
                                   const gchar* value);
VALA_EXTERN GType seafile_shared_group_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileSharedGroup, g_object_unref)
VALA_EXTERN SeafileSharedGroup* seafile_shared_group_new (void);
VALA_EXTERN SeafileSharedGroup* seafile_shared_group_construct (GType object_type);
VALA_EXTERN const gchar* seafile_shared_group_get_repo_id (SeafileSharedGroup* self);
VALA_EXTERN void seafile_shared_group_set_repo_id (SeafileSharedGroup* self,
                                       const gchar* value);
VALA_EXTERN gint seafile_shared_group_get_group_id (SeafileSharedGroup* self);
VALA_EXTERN void seafile_shared_group_set_group_id (SeafileSharedGroup* self,
                                        gint value);
VALA_EXTERN const gchar* seafile_shared_group_get_perm (SeafileSharedGroup* self);
VALA_EXTERN void seafile_shared_group_set_perm (SeafileSharedGroup* self,
                                    const gchar* value);
VALA_EXTERN GType seafile_encryption_info_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileEncryptionInfo, g_object_unref)
VALA_EXTERN SeafileEncryptionInfo* seafile_encryption_info_new (void);
VALA_EXTERN SeafileEncryptionInfo* seafile_encryption_info_construct (GType object_type);
VALA_EXTERN const gchar* seafile_encryption_info_get_repo_id (SeafileEncryptionInfo* self);
VALA_EXTERN void seafile_encryption_info_set_repo_id (SeafileEncryptionInfo* self,
                                          const gchar* value);
VALA_EXTERN const gchar* seafile_encryption_info_get_passwd (SeafileEncryptionInfo* self);
VALA_EXTERN void seafile_encryption_info_set_passwd (SeafileEncryptionInfo* self,
                                         const gchar* value);
VALA_EXTERN gint seafile_encryption_info_get_enc_version (SeafileEncryptionInfo* self);
VALA_EXTERN void seafile_encryption_info_set_enc_version (SeafileEncryptionInfo* self,
                                              gint value);
VALA_EXTERN const gchar* seafile_encryption_info_get_magic (SeafileEncryptionInfo* self);
VALA_EXTERN void seafile_encryption_info_set_magic (SeafileEncryptionInfo* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_encryption_info_get_random_key (SeafileEncryptionInfo* self);
VALA_EXTERN void seafile_encryption_info_set_random_key (SeafileEncryptionInfo* self,
                                             const gchar* value);
VALA_EXTERN const gchar* seafile_encryption_info_get_salt (SeafileEncryptionInfo* self);
VALA_EXTERN void seafile_encryption_info_set_salt (SeafileEncryptionInfo* self,
                                       const gchar* value);
VALA_EXTERN GType seafile_user_quota_usage_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileUserQuotaUsage, g_object_unref)
VALA_EXTERN SeafileUserQuotaUsage* seafile_user_quota_usage_new (void);
VALA_EXTERN SeafileUserQuotaUsage* seafile_user_quota_usage_construct (GType object_type);
VALA_EXTERN const gchar* seafile_user_quota_usage_get_user (SeafileUserQuotaUsage* self);
VALA_EXTERN void seafile_user_quota_usage_set_user (SeafileUserQuotaUsage* self,
                                        const gchar* value);
VALA_EXTERN gint64 seafile_user_quota_usage_get_usage (SeafileUserQuotaUsage* self);
VALA_EXTERN void seafile_user_quota_usage_set_usage (SeafileUserQuotaUsage* self,
                                         gint64 value);
VALA_EXTERN GType seafile_folder_user_perm_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileFolderUserPerm, g_object_unref)
VALA_EXTERN SeafileFolderUserPerm* seafile_folder_user_perm_new (void);
VALA_EXTERN SeafileFolderUserPerm* seafile_folder_user_perm_construct (GType object_type);
VALA_EXTERN const gchar* seafile_folder_user_perm_get_repo_id (SeafileFolderUserPerm* self);
VALA_EXTERN void seafile_folder_user_perm_set_repo_id (SeafileFolderUserPerm* self,
                                           const gchar* value);
VALA_EXTERN const gchar* seafile_folder_user_perm_get_path (SeafileFolderUserPerm* self);
VALA_EXTERN void seafile_folder_user_perm_set_path (SeafileFolderUserPerm* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_folder_user_perm_get_permission (SeafileFolderUserPerm* self);
VALA_EXTERN void seafile_folder_user_perm_set_permission (SeafileFolderUserPerm* self,
                                              const gchar* value);
VALA_EXTERN const gchar* seafile_folder_user_perm_get_user (SeafileFolderUserPerm* self);
VALA_EXTERN void seafile_folder_user_perm_set_user (SeafileFolderUserPerm* self,
                                        const gchar* value);
VALA_EXTERN GType seafile_folder_group_perm_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileFolderGroupPerm, g_object_unref)
VALA_EXTERN SeafileFolderGroupPerm* seafile_folder_group_perm_new (void);
VALA_EXTERN SeafileFolderGroupPerm* seafile_folder_group_perm_construct (GType object_type);
VALA_EXTERN const gchar* seafile_folder_group_perm_get_repo_id (SeafileFolderGroupPerm* self);
VALA_EXTERN void seafile_folder_group_perm_set_repo_id (SeafileFolderGroupPerm* self,
                                            const gchar* value);
VALA_EXTERN const gchar* seafile_folder_group_perm_get_path (SeafileFolderGroupPerm* self);
VALA_EXTERN void seafile_folder_group_perm_set_path (SeafileFolderGroupPerm* self,
                                         const gchar* value);
VALA_EXTERN const gchar* seafile_folder_group_perm_get_permission (SeafileFolderGroupPerm* self);
VALA_EXTERN void seafile_folder_group_perm_set_permission (SeafileFolderGroupPerm* self,
                                               const gchar* value);
VALA_EXTERN gint seafile_folder_group_perm_get_group_id (SeafileFolderGroupPerm* self);
VALA_EXTERN void seafile_folder_group_perm_set_group_id (SeafileFolderGroupPerm* self,
                                             gint value);
VALA_EXTERN GType seafile_file_lock_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileFileLock, g_object_unref)
VALA_EXTERN SeafileFileLock* seafile_file_lock_new (void);
VALA_EXTERN SeafileFileLock* seafile_file_lock_construct (GType object_type);
VALA_EXTERN const gchar* seafile_file_lock_get_repo_id (SeafileFileLock* self);
VALA_EXTERN void seafile_file_lock_set_repo_id (SeafileFileLock* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_file_lock_get_path (SeafileFileLock* self);
VALA_EXTERN void seafile_file_lock_set_path (SeafileFileLock* self,
                                 const gchar* value);
VALA_EXTERN const gchar* seafile_file_lock_get_user (SeafileFileLock* self);
VALA_EXTERN void seafile_file_lock_set_user (SeafileFileLock* self,
                                 const gchar* value);
VALA_EXTERN gint64 seafile_file_lock_get_lock_time (SeafileFileLock* self);
VALA_EXTERN void seafile_file_lock_set_lock_time (SeafileFileLock* self,
                                      gint64 value);
VALA_EXTERN gint64 seafile_file_lock_get_expire (SeafileFileLock* self);
VALA_EXTERN void seafile_file_lock_set_expire (SeafileFileLock* self,
                                   gint64 value);
VALA_EXTERN GType seafile_repo_id_commit_id_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileRepoIdCommitId, g_object_unref)
VALA_EXTERN SeafileRepoIdCommitId* seafile_repo_id_commit_id_new (void);
VALA_EXTERN SeafileRepoIdCommitId* seafile_repo_id_commit_id_construct (GType object_type);
VALA_EXTERN const gchar* seafile_repo_id_commit_id_get_repo_id (SeafileRepoIdCommitId* self);
VALA_EXTERN void seafile_repo_id_commit_id_set_repo_id (SeafileRepoIdCommitId* self,
                                            const gchar* value);
VALA_EXTERN const gchar* seafile_repo_id_commit_id_get_commit_id (SeafileRepoIdCommitId* self);
VALA_EXTERN void seafile_repo_id_commit_id_set_commit_id (SeafileRepoIdCommitId* self,
                                              const gchar* value);
VALA_EXTERN GType seafile_storage_classes_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileStorageClasses, g_object_unref)
VALA_EXTERN SeafileStorageClasses* seafile_storage_classes_new (void);
VALA_EXTERN SeafileStorageClasses* seafile_storage_classes_construct (GType object_type);
VALA_EXTERN const gchar* seafile_storage_classes_get_storage_id (SeafileStorageClasses* self);
VALA_EXTERN void seafile_storage_classes_set_storage_id (SeafileStorageClasses* self,
                                             const gchar* value);
VALA_EXTERN const gchar* seafile_storage_classes_get_storage_name (SeafileStorageClasses* self);
VALA_EXTERN void seafile_storage_classes_set_storage_name (SeafileStorageClasses* self,
                                               const gchar* value);
VALA_EXTERN gboolean seafile_storage_classes_get_is_default (SeafileStorageClasses* self);
VALA_EXTERN void seafile_storage_classes_set_is_default (SeafileStorageClasses* self,
                                             gboolean value);
VALA_EXTERN GType seafile_commit_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileCommit, g_object_unref)
VALA_EXTERN SeafileCommit* seafile_commit_new (void);
VALA_EXTERN SeafileCommit* seafile_commit_construct (GType object_type);
VALA_EXTERN const gchar* seafile_commit_get_id (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_id (SeafileCommit* self,
                            const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_creator_name (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_creator_name (SeafileCommit* self,
                                      const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_creator (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_creator (SeafileCommit* self,
                                 const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_desc (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_desc (SeafileCommit* self,
                              const gchar* value);
VALA_EXTERN gint64 seafile_commit_get_ctime (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_ctime (SeafileCommit* self,
                               gint64 value);
VALA_EXTERN const gchar* seafile_commit_get_parent_id (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_parent_id (SeafileCommit* self,
                                   const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_second_parent_id (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_second_parent_id (SeafileCommit* self,
                                          const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_repo_id (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_repo_id (SeafileCommit* self,
                                 const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_root_id (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_root_id (SeafileCommit* self,
                                 const gchar* value);
VALA_EXTERN gint seafile_commit_get_version (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_version (SeafileCommit* self,
                                 gint value);
VALA_EXTERN gboolean seafile_commit_get_new_merge (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_new_merge (SeafileCommit* self,
                                   gboolean value);
VALA_EXTERN gboolean seafile_commit_get_conflict (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_conflict (SeafileCommit* self,
                                  gboolean value);
VALA_EXTERN const gchar* seafile_commit_get_rev_file_id (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_rev_file_id (SeafileCommit* self,
                                     const gchar* value);
VALA_EXTERN gint64 seafile_commit_get_rev_file_size (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_rev_file_size (SeafileCommit* self,
                                       gint64 value);
VALA_EXTERN const gchar* seafile_commit_get_rev_renamed_old_path (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_rev_renamed_old_path (SeafileCommit* self,
                                              const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_device_name (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_device_name (SeafileCommit* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_client_version (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_client_version (SeafileCommit* self,
                                        const gchar* value);
VALA_EXTERN const gchar* seafile_commit_get_next_start_commit (SeafileCommit* self);
VALA_EXTERN void seafile_commit_set_next_start_commit (SeafileCommit* self,
                                           const gchar* value);
VALA_EXTERN GType seafile_dirent_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileDirent, g_object_unref)
VALA_EXTERN SeafileDirent* seafile_dirent_new (void);
VALA_EXTERN SeafileDirent* seafile_dirent_construct (GType object_type);
VALA_EXTERN const gchar* seafile_dirent_get_obj_id (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_obj_id (SeafileDirent* self,
                                const gchar* value);
VALA_EXTERN const gchar* seafile_dirent_get_obj_name (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_obj_name (SeafileDirent* self,
                                  const gchar* value);
VALA_EXTERN gint seafile_dirent_get_mode (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_mode (SeafileDirent* self,
                              gint value);
VALA_EXTERN gint seafile_dirent_get_version (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_version (SeafileDirent* self,
                                 gint value);
VALA_EXTERN gint64 seafile_dirent_get_mtime (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_mtime (SeafileDirent* self,
                               gint64 value);
VALA_EXTERN gint64 seafile_dirent_get_size (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_size (SeafileDirent* self,
                              gint64 value);
VALA_EXTERN const gchar* seafile_dirent_get_modifier (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_modifier (SeafileDirent* self,
                                  const gchar* value);
VALA_EXTERN const gchar* seafile_dirent_get_permission (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_permission (SeafileDirent* self,
                                    const gchar* value);
VALA_EXTERN gboolean seafile_dirent_get_is_locked (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_is_locked (SeafileDirent* self,
                                   gboolean value);
VALA_EXTERN const gchar* seafile_dirent_get_lock_owner (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_lock_owner (SeafileDirent* self,
                                    const gchar* value);
VALA_EXTERN gint64 seafile_dirent_get_lock_time (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_lock_time (SeafileDirent* self,
                                   gint64 value);
VALA_EXTERN gint64 seafile_dirent_get_expire (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_expire (SeafileDirent* self,
                                gint64 value);
VALA_EXTERN gboolean seafile_dirent_get_is_shared (SeafileDirent* self);
VALA_EXTERN void seafile_dirent_set_is_shared (SeafileDirent* self,
                                   gboolean value);
VALA_EXTERN GType seafile_file_last_modified_info_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileFileLastModifiedInfo, g_object_unref)
VALA_EXTERN SeafileFileLastModifiedInfo* seafile_file_last_modified_info_new (void);
VALA_EXTERN SeafileFileLastModifiedInfo* seafile_file_last_modified_info_construct (GType object_type);
VALA_EXTERN const gchar* seafile_file_last_modified_info_get_file_name (SeafileFileLastModifiedInfo* self);
VALA_EXTERN void seafile_file_last_modified_info_set_file_name (SeafileFileLastModifiedInfo* self,
                                                    const gchar* value);
VALA_EXTERN gint64 seafile_file_last_modified_info_get_last_modified (SeafileFileLastModifiedInfo* self);
VALA_EXTERN void seafile_file_last_modified_info_set_last_modified (SeafileFileLastModifiedInfo* self,
                                                        gint64 value);
VALA_EXTERN GType seafile_dir_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileDir, g_object_unref)
VALA_EXTERN SeafileDir* seafile_dir_new (void);
VALA_EXTERN SeafileDir* seafile_dir_construct (GType object_type);
VALA_EXTERN const gchar* seafile_dir_get_id (SeafileDir* self);
VALA_EXTERN void seafile_dir_set_id (SeafileDir* self,
                         const gchar* value);
VALA_EXTERN gint seafile_dir_get_version (SeafileDir* self);
VALA_EXTERN void seafile_dir_set_version (SeafileDir* self,
                              gint value);
VALA_EXTERN GType seafile_file_count_info_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileFileCountInfo, g_object_unref)
VALA_EXTERN SeafileFileCountInfo* seafile_file_count_info_new (void);
VALA_EXTERN SeafileFileCountInfo* seafile_file_count_info_construct (GType object_type);
VALA_EXTERN gint64 seafile_file_count_info_get_file_count (SeafileFileCountInfo* self);
VALA_EXTERN void seafile_file_count_info_set_file_count (SeafileFileCountInfo* self,
                                             gint64 value);
VALA_EXTERN gint64 seafile_file_count_info_get_dir_count (SeafileFileCountInfo* self);
VALA_EXTERN void seafile_file_count_info_set_dir_count (SeafileFileCountInfo* self,
                                            gint64 value);
VALA_EXTERN gint64 seafile_file_count_info_get_size (SeafileFileCountInfo* self);
VALA_EXTERN void seafile_file_count_info_set_size (SeafileFileCountInfo* self,
                                       gint64 value);
VALA_EXTERN GType seafile_task_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileTask, g_object_unref)
VALA_EXTERN SeafileTask* seafile_task_new (void);
VALA_EXTERN SeafileTask* seafile_task_construct (GType object_type);
VALA_EXTERN const gchar* seafile_task_get_tx_id (SeafileTask* self);
VALA_EXTERN void seafile_task_set_tx_id (SeafileTask* self,
                             const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_ttype (SeafileTask* self);
VALA_EXTERN void seafile_task_set_ttype (SeafileTask* self,
                             const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_repo_id (SeafileTask* self);
VALA_EXTERN void seafile_task_set_repo_id (SeafileTask* self,
                               const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_dest_id (SeafileTask* self);
VALA_EXTERN void seafile_task_set_dest_id (SeafileTask* self,
                               const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_from_branch (SeafileTask* self);
VALA_EXTERN void seafile_task_set_from_branch (SeafileTask* self,
                                   const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_to_branch (SeafileTask* self);
VALA_EXTERN void seafile_task_set_to_branch (SeafileTask* self,
                                 const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_state (SeafileTask* self);
VALA_EXTERN void seafile_task_set_state (SeafileTask* self,
                             const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_rt_state (SeafileTask* self);
VALA_EXTERN void seafile_task_set_rt_state (SeafileTask* self,
                                const gchar* value);
VALA_EXTERN const gchar* seafile_task_get_error_str (SeafileTask* self);
VALA_EXTERN void seafile_task_set_error_str (SeafileTask* self,
                                 const gchar* value);
VALA_EXTERN gint seafile_task_get_block_total (SeafileTask* self);
VALA_EXTERN void seafile_task_set_block_total (SeafileTask* self,
                                   gint value);
VALA_EXTERN gint seafile_task_get_block_done (SeafileTask* self);
VALA_EXTERN void seafile_task_set_block_done (SeafileTask* self,
                                  gint value);
VALA_EXTERN gint seafile_task_get_fs_objects_total (SeafileTask* self);
VALA_EXTERN void seafile_task_set_fs_objects_total (SeafileTask* self,
                                        gint value);
VALA_EXTERN gint seafile_task_get_fs_objects_done (SeafileTask* self);
VALA_EXTERN void seafile_task_set_fs_objects_done (SeafileTask* self,
                                       gint value);
VALA_EXTERN gint seafile_task_get_rate (SeafileTask* self);
VALA_EXTERN void seafile_task_set_rate (SeafileTask* self,
                            gint value);
VALA_EXTERN gint64 seafile_task_get_rsize (SeafileTask* self);
VALA_EXTERN void seafile_task_set_rsize (SeafileTask* self,
                             gint64 value);
VALA_EXTERN gint64 seafile_task_get_dsize (SeafileTask* self);
VALA_EXTERN void seafile_task_set_dsize (SeafileTask* self,
                             gint64 value);
VALA_EXTERN GType seafile_clone_task_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileCloneTask, g_object_unref)
VALA_EXTERN SeafileCloneTask* seafile_clone_task_new (void);
VALA_EXTERN SeafileCloneTask* seafile_clone_task_construct (GType object_type);
VALA_EXTERN const gchar* seafile_clone_task_get_state (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_state (SeafileCloneTask* self,
                                   const gchar* value);
VALA_EXTERN const gchar* seafile_clone_task_get_error_str (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_error_str (SeafileCloneTask* self,
                                       const gchar* value);
VALA_EXTERN const gchar* seafile_clone_task_get_repo_id (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_repo_id (SeafileCloneTask* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_clone_task_get_peer_id (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_peer_id (SeafileCloneTask* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_clone_task_get_repo_name (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_repo_name (SeafileCloneTask* self,
                                       const gchar* value);
VALA_EXTERN const gchar* seafile_clone_task_get_worktree (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_worktree (SeafileCloneTask* self,
                                      const gchar* value);
VALA_EXTERN const gchar* seafile_clone_task_get_tx_id (SeafileCloneTask* self);
VALA_EXTERN void seafile_clone_task_set_tx_id (SeafileCloneTask* self,
                                   const gchar* value);
VALA_EXTERN GType seafile_branch_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileBranch, g_object_unref)
VALA_EXTERN SeafileBranch* seafile_branch_new (void);
VALA_EXTERN SeafileBranch* seafile_branch_construct (GType object_type);
VALA_EXTERN const gchar* seafile_branch_get_name (SeafileBranch* self);
VALA_EXTERN void seafile_branch_set_name (SeafileBranch* self,
                              const gchar* value);
VALA_EXTERN const gchar* seafile_branch_get_commit_id (SeafileBranch* self);
VALA_EXTERN void seafile_branch_set_commit_id (SeafileBranch* self,
                                   const gchar* value);
VALA_EXTERN const gchar* seafile_branch_get_repo_id (SeafileBranch* self);
VALA_EXTERN void seafile_branch_set_repo_id (SeafileBranch* self,
                                 const gchar* value);
VALA_EXTERN GType seafile_crypt_key_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileCryptKey, g_object_unref)
VALA_EXTERN SeafileCryptKey* seafile_crypt_key_new (void);
VALA_EXTERN SeafileCryptKey* seafile_crypt_key_construct (GType object_type);
VALA_EXTERN const gchar* seafile_crypt_key_get_key (SeafileCryptKey* self);
VALA_EXTERN void seafile_crypt_key_set_key (SeafileCryptKey* self,
                                const gchar* value);
VALA_EXTERN const gchar* seafile_crypt_key_get_iv (SeafileCryptKey* self);
VALA_EXTERN void seafile_crypt_key_set_iv (SeafileCryptKey* self,
                               const gchar* value);
VALA_EXTERN GType seafile_web_access_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileWebAccess, g_object_unref)
VALA_EXTERN SeafileWebAccess* seafile_web_access_new (void);
VALA_EXTERN SeafileWebAccess* seafile_web_access_construct (GType object_type);
VALA_EXTERN const gchar* seafile_web_access_get_repo_id (SeafileWebAccess* self);
VALA_EXTERN void seafile_web_access_set_repo_id (SeafileWebAccess* self,
                                     const gchar* value);
VALA_EXTERN const gchar* seafile_web_access_get_obj_id (SeafileWebAccess* self);
VALA_EXTERN void seafile_web_access_set_obj_id (SeafileWebAccess* self,
                                    const gchar* value);
VALA_EXTERN const gchar* seafile_web_access_get_op (SeafileWebAccess* self);
VALA_EXTERN void seafile_web_access_set_op (SeafileWebAccess* self,
                                const gchar* value);
VALA_EXTERN const gchar* seafile_web_access_get_username (SeafileWebAccess* self);
VALA_EXTERN void seafile_web_access_set_username (SeafileWebAccess* self,
                                      const gchar* value);
VALA_EXTERN gint seafile_web_access_get_check_virus (SeafileWebAccess* self);
VALA_EXTERN void seafile_web_access_set_check_virus (SeafileWebAccess* self,
                                         gint value);
VALA_EXTERN GType seafile_copy_task_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileCopyTask, g_object_unref)
VALA_EXTERN SeafileCopyTask* seafile_copy_task_new (void);
VALA_EXTERN SeafileCopyTask* seafile_copy_task_construct (GType object_type);
VALA_EXTERN gint64 seafile_copy_task_get_done (SeafileCopyTask* self);
VALA_EXTERN void seafile_copy_task_set_done (SeafileCopyTask* self,
                                 gint64 value);
VALA_EXTERN gint64 seafile_copy_task_get_total (SeafileCopyTask* self);
VALA_EXTERN void seafile_copy_task_set_total (SeafileCopyTask* self,
                                  gint64 value);
VALA_EXTERN gboolean seafile_copy_task_get_canceled (SeafileCopyTask* self);
VALA_EXTERN void seafile_copy_task_set_canceled (SeafileCopyTask* self,
                                     gboolean value);
VALA_EXTERN gboolean seafile_copy_task_get_failed (SeafileCopyTask* self);
VALA_EXTERN void seafile_copy_task_set_failed (SeafileCopyTask* self,
                                   gboolean value);
VALA_EXTERN const gchar* seafile_copy_task_get_failed_reason (SeafileCopyTask* self);
VALA_EXTERN void seafile_copy_task_set_failed_reason (SeafileCopyTask* self,
                                          const gchar* value);
VALA_EXTERN gboolean seafile_copy_task_get_successful (SeafileCopyTask* self);
VALA_EXTERN void seafile_copy_task_set_successful (SeafileCopyTask* self,
                                       gboolean value);
VALA_EXTERN GType seafile_copy_result_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileCopyResult, g_object_unref)
VALA_EXTERN SeafileCopyResult* seafile_copy_result_new (void);
VALA_EXTERN SeafileCopyResult* seafile_copy_result_construct (GType object_type);
VALA_EXTERN gboolean seafile_copy_result_get_background (SeafileCopyResult* self);
VALA_EXTERN void seafile_copy_result_set_background (SeafileCopyResult* self,
                                         gboolean value);
VALA_EXTERN const gchar* seafile_copy_result_get_task_id (SeafileCopyResult* self);
VALA_EXTERN void seafile_copy_result_set_task_id (SeafileCopyResult* self,
                                      const gchar* value);
VALA_EXTERN GType ccnet_email_user_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CcnetEmailUser, g_object_unref)
VALA_EXTERN CcnetEmailUser* ccnet_email_user_new (void);
VALA_EXTERN CcnetEmailUser* ccnet_email_user_construct (GType object_type);
VALA_EXTERN gint ccnet_email_user_get_id (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_id (CcnetEmailUser* self,
                              gint value);
VALA_EXTERN const gchar* ccnet_email_user_get_email (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_email (CcnetEmailUser* self,
                                 const gchar* value);
VALA_EXTERN gboolean ccnet_email_user_get_is_staff (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_is_staff (CcnetEmailUser* self,
                                    gboolean value);
VALA_EXTERN gboolean ccnet_email_user_get_is_active (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_is_active (CcnetEmailUser* self,
                                     gboolean value);
VALA_EXTERN gint64 ccnet_email_user_get_ctime (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_ctime (CcnetEmailUser* self,
                                 gint64 value);
VALA_EXTERN const gchar* ccnet_email_user_get_source (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_source (CcnetEmailUser* self,
                                  const gchar* value);
VALA_EXTERN const gchar* ccnet_email_user_get_role (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_role (CcnetEmailUser* self,
                                const gchar* value);
VALA_EXTERN const gchar* ccnet_email_user_get_password (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_password (CcnetEmailUser* self,
                                    const gchar* value);
VALA_EXTERN const gchar* ccnet_email_user_get_reference_id (CcnetEmailUser* self);
VALA_EXTERN void ccnet_email_user_set_reference_id (CcnetEmailUser* self,
                                        const gchar* value);
VALA_EXTERN GType ccnet_ldap_user_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CcnetLDAPUser, g_object_unref)
VALA_EXTERN CcnetLDAPUser* ccnet_ldap_user_new (void);
VALA_EXTERN CcnetLDAPUser* ccnet_ldap_user_construct (GType object_type);
VALA_EXTERN gint ccnet_ldap_user_get_id (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_id (CcnetLDAPUser* self,
                             gint value);
VALA_EXTERN const gchar* ccnet_ldap_user_get_email (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_email (CcnetLDAPUser* self,
                                const gchar* value);
VALA_EXTERN const gchar* ccnet_ldap_user_get_password (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_password (CcnetLDAPUser* self,
                                   const gchar* value);
VALA_EXTERN gboolean ccnet_ldap_user_get_is_staff (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_is_staff (CcnetLDAPUser* self,
                                   gboolean value);
VALA_EXTERN gboolean ccnet_ldap_user_get_is_active (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_is_active (CcnetLDAPUser* self,
                                    gboolean value);
VALA_EXTERN const gchar* ccnet_ldap_user_get_extra (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_extra (CcnetLDAPUser* self,
                                const gchar* value);
VALA_EXTERN const gchar* ccnet_ldap_user_get_role (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_role (CcnetLDAPUser* self,
                               const gchar* value);
VALA_EXTERN gint ccnet_ldap_user_get_is_manual_set (CcnetLDAPUser* self);
VALA_EXTERN void ccnet_ldap_user_set_is_manual_set (CcnetLDAPUser* self,
                                        gint value);
VALA_EXTERN GType ccnet_group_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CcnetGroup, g_object_unref)
VALA_EXTERN CcnetGroup* ccnet_group_new (void);
VALA_EXTERN CcnetGroup* ccnet_group_construct (GType object_type);
VALA_EXTERN gint ccnet_group_get_id (CcnetGroup* self);
VALA_EXTERN void ccnet_group_set_id (CcnetGroup* self,
                         gint value);
VALA_EXTERN const gchar* ccnet_group_get_group_name (CcnetGroup* self);
VALA_EXTERN void ccnet_group_set_group_name (CcnetGroup* self,
                                 const gchar* value);
VALA_EXTERN const gchar* ccnet_group_get_creator_name (CcnetGroup* self);
VALA_EXTERN void ccnet_group_set_creator_name (CcnetGroup* self,
                                   const gchar* value);
VALA_EXTERN gint64 ccnet_group_get_timestamp (CcnetGroup* self);
VALA_EXTERN void ccnet_group_set_timestamp (CcnetGroup* self,
                                gint64 value);
VALA_EXTERN const gchar* ccnet_group_get_source (CcnetGroup* self);
VALA_EXTERN void ccnet_group_set_source (CcnetGroup* self,
                             const gchar* value);
VALA_EXTERN gint ccnet_group_get_parent_group_id (CcnetGroup* self);
VALA_EXTERN void ccnet_group_set_parent_group_id (CcnetGroup* self,
                                      gint value);
VALA_EXTERN GType ccnet_group_user_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CcnetGroupUser, g_object_unref)
VALA_EXTERN CcnetGroupUser* ccnet_group_user_new (void);
VALA_EXTERN CcnetGroupUser* ccnet_group_user_construct (GType object_type);
VALA_EXTERN gint ccnet_group_user_get_group_id (CcnetGroupUser* self);
VALA_EXTERN void ccnet_group_user_set_group_id (CcnetGroupUser* self,
                                    gint value);
VALA_EXTERN const gchar* ccnet_group_user_get_user_name (CcnetGroupUser* self);
VALA_EXTERN void ccnet_group_user_set_user_name (CcnetGroupUser* self,
                                     const gchar* value);
VALA_EXTERN gint ccnet_group_user_get_is_staff (CcnetGroupUser* self);
VALA_EXTERN void ccnet_group_user_set_is_staff (CcnetGroupUser* self,
                                    gint value);
VALA_EXTERN GType ccnet_group_dn_pair_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CcnetGroupDNPair, g_object_unref)
VALA_EXTERN CcnetGroupDNPair* ccnet_group_dn_pair_new (void);
VALA_EXTERN CcnetGroupDNPair* ccnet_group_dn_pair_construct (GType object_type);
VALA_EXTERN gint ccnet_group_dn_pair_get_group_id (CcnetGroupDNPair* self);
VALA_EXTERN void ccnet_group_dn_pair_set_group_id (CcnetGroupDNPair* self,
                                       gint value);
VALA_EXTERN const gchar* ccnet_group_dn_pair_get_dn (CcnetGroupDNPair* self);
VALA_EXTERN void ccnet_group_dn_pair_set_dn (CcnetGroupDNPair* self,
                                 const gchar* value);
VALA_EXTERN GType ccnet_organization_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (CcnetOrganization, g_object_unref)
VALA_EXTERN CcnetOrganization* ccnet_organization_new (void);
VALA_EXTERN CcnetOrganization* ccnet_organization_construct (GType object_type);
VALA_EXTERN gint ccnet_organization_get_org_id (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_org_id (CcnetOrganization* self,
                                    gint value);
VALA_EXTERN const gchar* ccnet_organization_get_email (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_email (CcnetOrganization* self,
                                   const gchar* value);
VALA_EXTERN gint ccnet_organization_get_is_staff (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_is_staff (CcnetOrganization* self,
                                      gint value);
VALA_EXTERN const gchar* ccnet_organization_get_org_name (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_org_name (CcnetOrganization* self,
                                      const gchar* value);
VALA_EXTERN const gchar* ccnet_organization_get_url_prefix (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_url_prefix (CcnetOrganization* self,
                                        const gchar* value);
VALA_EXTERN const gchar* ccnet_organization_get_creator (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_creator (CcnetOrganization* self,
                                     const gchar* value);
VALA_EXTERN gint64 ccnet_organization_get_ctime (CcnetOrganization* self);
VALA_EXTERN void ccnet_organization_set_ctime (CcnetOrganization* self,
                                   gint64 value);
VALA_EXTERN GType seafile_search_result_get_type (void) G_GNUC_CONST ;
G_DEFINE_AUTOPTR_CLEANUP_FUNC (SeafileSearchResult, g_object_unref)
VALA_EXTERN SeafileSearchResult* seafile_search_result_new (void);
VALA_EXTERN SeafileSearchResult* seafile_search_result_construct (GType object_type);
VALA_EXTERN const gchar* seafile_search_result_get_path (SeafileSearchResult* self);
VALA_EXTERN void seafile_search_result_set_path (SeafileSearchResult* self,
                                     const gchar* value);
VALA_EXTERN gint64 seafile_search_result_get_size (SeafileSearchResult* self);
VALA_EXTERN void seafile_search_result_set_size (SeafileSearchResult* self,
                                     gint64 value);
VALA_EXTERN gint64 seafile_search_result_get_mtime (SeafileSearchResult* self);
VALA_EXTERN void seafile_search_result_set_mtime (SeafileSearchResult* self,
                                      gint64 value);
VALA_EXTERN gboolean seafile_search_result_get_is_dir (SeafileSearchResult* self);
VALA_EXTERN void seafile_search_result_set_is_dir (SeafileSearchResult* self,
                                       gboolean value);

G_END_DECLS

#endif
